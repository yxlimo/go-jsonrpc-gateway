{
  "openapi": "3.0.0",
  "info": {
    "title": "test/proto/everything/a_bit_of_everything.proto",
    "description": "",
    "version": "0.0.1"
  },
  "paths": {
    "/check_external_nested_path_enum": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CheckExternalNestedPathEnum$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/pathenum.MessageWithNestedPathEnum"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CheckExternalNestedPathEnum$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/check_external_path_enum": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CheckExternalPathEnum$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/pathenum.MessageWithPathEnum"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CheckExternalPathEnum$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/check_get_query_params": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CheckGetQueryParams$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CheckGetQueryParams$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/check_nested_enum_get_query_params": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CheckNestedEnumGetQueryParams$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CheckNestedEnumGetQueryParams$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/check_post_query_params": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CheckPostQueryParams$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CheckPostQueryParams$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/create": {
      "post": {
        "summary": " Create a new ABitOfEverything\n\n This API creates a new ABitOfEverything\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Create$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Create$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/create_body": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CreateBody$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CreateBody$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/create_book": {
      "post": {
        "summary": " Create a book.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^CreateBook$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.CreateBookRequest"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^CreateBook$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.Book"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/deep_path_echo": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^DeepPathEcho$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^DeepPathEcho$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Delete$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/sub2.IdMessage"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Delete$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/echo": {
      "post": {
        "summary": " Echo allows posting a StringMessage value.\n\n It also exposes multiple bindings.\n\n This makes it useful when validating that the OpenAPI v2 API\n description exposes documentation correctly on all paths\n defined as additional_bindings in the proto.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Echo$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/sub.StringMessage"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Echo$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/sub.StringMessage"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/empty": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Empty$"
                  },
                  "params": {
                    "type": "object"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Empty$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/error_with_details": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^ErrorWithDetails$"
                  },
                  "params": {
                    "type": "object"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^ErrorWithDetails$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_message_with_body": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^GetMessageWithBody$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.MessageWithBody"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^GetMessageWithBody$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_query": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^GetQuery$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^GetQuery$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_repeated_query": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^GetRepeatedQuery$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverythingRepeated"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^GetRepeatedQuery$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverythingRepeated"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/lookup": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Lookup$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/sub2.IdMessage"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Lookup$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.ABitOfEverything"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/no_bindings": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^NoBindings$"
                  },
                  "params": {
                    "type": "object"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^NoBindings$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/overwrite_response_content_type": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^OverwriteResponseContentType$"
                  },
                  "params": {
                    "type": "object"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^OverwriteResponseContentType$"
                    },
                    "result": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/post_with_empty_body": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^PostWithEmptyBody$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.Body"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^PostWithEmptyBody$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/timeout": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Timeout$"
                  },
                  "params": {
                    "type": "object"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Timeout$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/update": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^Update$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.ABitOfEverything"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^Update$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/update_book": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^UpdateBook$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.UpdateBookRequest"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^UpdateBook$"
                    },
                    "result": {
                      "$ref": "#/components/schemas/everything.Book"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/update_v_2": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "pattern": "^UpdateV2$"
                  },
                  "params": {
                    "$ref": "#/components/schemas/everything.UpdateV2Request"
                  }
                },
                "required": [
                  "jsonrpc",
                  "method",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jsonrpc": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "pattern": "^UpdateV2$"
                    },
                    "result": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ABitOfEverything.Nested": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "ok": {
            "type": "string",
            "enum": [
              "FALSE",
              "TRUE"
            ]
          }
        }
      },
      "everything.ABitOfEverything": {
        "type": "object",
        "properties": {
          "bool_value": {
            "type": "boolean"
          },
          "bytes_value": {
            "type": "string",
            "format": "byte"
          },
          "double_value": {
            "type": "string",
            "format": "double"
          },
          "enum_value": {
            "type": "string",
            "enum": [
              "ZERO",
              "ONE"
            ]
          },
          "enum_value_annotation": {
            "type": "string",
            "enum": [
              "ZERO",
              "ONE"
            ]
          },
          "fixed32_value": {
            "type": "integer",
            "format": "int64"
          },
          "fixed64_value": {
            "type": "string",
            "format": "uint64"
          },
          "float_value": {
            "type": "number",
            "format": "float"
          },
          "int32_value": {
            "type": "integer",
            "format": "int32"
          },
          "int64_override_type": {
            "type": "string",
            "format": "int64"
          },
          "int64_value": {
            "type": "string",
            "format": "int64"
          },
          "map_value": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "mapped_nested_value": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ABitOfEverything.Nested"
            }
          },
          "mapped_string_value": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "nested": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ABitOfEverything.Nested"
            }
          },
          "nested_annotation": {
            "$ref": "#/components/schemas/ABitOfEverything.Nested"
          },
          "nested_path_enum_value": {
            "type": "string",
            "enum": [
              "GHI",
              "JKL"
            ]
          },
          "non_conventional_name_value": {
            "type": "string"
          },
          "oneof_empty": {
            "type": "object"
          },
          "oneof_string": {
            "type": "string"
          },
          "optional_string_value": {
            "type": "string"
          },
          "output_only_string_via_field_behavior_annotation": {
            "type": "string"
          },
          "path_enum_value": {
            "type": "string",
            "enum": [
              "ABC",
              "DEF"
            ]
          },
          "repeated_enum_annotation": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "repeated_enum_value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "repeated_nested_annotation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ABitOfEverything.Nested"
            }
          },
          "repeated_string_annotation": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "repeated_string_value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "required_string_via_field_behavior_annotation": {
            "type": "string"
          },
          "sfixed32_value": {
            "type": "integer",
            "format": "int32"
          },
          "sfixed64_value": {
            "type": "string",
            "format": "int64"
          },
          "single_nested": {
            "$ref": "#/components/schemas/ABitOfEverything.Nested"
          },
          "sint32_value": {
            "type": "integer",
            "format": "int32"
          },
          "sint64_value": {
            "type": "string",
            "format": "int64"
          },
          "string_value": {
            "type": "string"
          },
          "timestamp_value": {
            "type": "string",
            "format": "date-time"
          },
          "uint32_value": {
            "type": "integer",
            "format": "int64"
          },
          "uint64_value": {
            "type": "string",
            "format": "uint64"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "everything.ABitOfEverythingRepeated": {
        "type": "object",
        "properties": {
          "path_repeated_bool_value": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "path_repeated_bytes_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "path_repeated_double_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "double"
            }
          },
          "path_repeated_enum_value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path_repeated_fixed32_value": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "path_repeated_fixed64_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            }
          },
          "path_repeated_float_value": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "path_repeated_int32_value": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "path_repeated_int64_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "path_repeated_sfixed32_value": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "path_repeated_sfixed64_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "path_repeated_sint32_value": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "path_repeated_sint64_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "path_repeated_string_value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path_repeated_uint32_value": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "path_repeated_uint64_value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            }
          }
        }
      },
      "everything.Body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "everything.Book": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "everything.CreateBookRequest": {
        "type": "object",
        "properties": {
          "book": {
            "$ref": "#/components/schemas/everything.Book"
          },
          "book_id": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          }
        }
      },
      "everything.ErrorObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "everything.ErrorResponse": {
        "type": "object",
        "properties": {
          "correlation_id": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/everything.ErrorObject"
          }
        }
      },
      "everything.MessageWithBody": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/everything.Body"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "everything.UpdateBookRequest": {
        "type": "object",
        "properties": {
          "allow_missing": {
            "type": "boolean"
          },
          "book": {
            "$ref": "#/components/schemas/everything.Book"
          },
          "update_mask": {
            "type": "string"
          }
        }
      },
      "everything.UpdateV2Request": {
        "type": "object",
        "properties": {
          "abe": {
            "$ref": "#/components/schemas/everything.ABitOfEverything"
          },
          "update_mask": {
            "type": "string"
          }
        }
      },
      "pathenum.MessageWithNestedPathEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "GHI",
              "JKL"
            ]
          }
        }
      },
      "pathenum.MessageWithPathEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "ABC",
              "DEF"
            ]
          }
        }
      },
      "sub.StringMessage": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "sub2.IdMessage": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      }
    }
  }
}